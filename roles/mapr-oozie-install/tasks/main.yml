---
# Install Oozie and MySQL
- name: Install mapr-oozie
  package: name=mapr-oozie state=present
  register: oozie_result

# Other
- name: Find Oozie Path
  find: paths="/opt/mapr/oozie/" patterns="oozie*" file_type=directory
  register: oozie_path_result
  failed_when: oozie_path_result.matched != 1
- debug: msg="Oozie Path {{ oozie_path_result.files[0].path }}"
#- name: Downloading MySQL Driver
#  unarchive: src={{ mysql_jdbc_url }} dest=/tmp copy=no
#- name: Copy mysql driver
#  copy: remote_src=True src=/tmp/mysql-connector-java-{{ mysql_jdbc_version }}/mysql-connector-java-{{ mysql_jdbc_version }}-bin.jar dest={{ oozie_path_result.files[0].path }}/libext/
- name: Copy MySQL driver
  copy: src=mysql-connector-java-5.1.40-bin.jar dest={{ oozie_path_result.files[0].path }}/libext/
  when: oozie_db_type == 'mysql'
- name: Copy Oracle driver
  copy: src={{ oracle_jdbc_driver_path }} dest={{ oozie_path_result.files[0].path }}/libext/
  when: oozie_db_type == 'oracle'
- name: Configure oozie-site.xml - unsecure
  template: src=oozie-site.unsecure.xml dest={{ oozie_path_result.files[0].path }}/conf/oozie-site.xml
  when: oozie_security == 'none' or oozie_security == 'maprsasl' # automatically enabled when MapR security is enabled
- name: Configure oozie-site.xml - Kerberos
  template: src=oozie-site.kerberos.xml dest={{ oozie_path_result.files[0].path }}/conf/oozie-site.xml
  when: oozie_security == 'kerberos'
- name: Run oozie-setup.sh
  command: "{{ oozie_path_result.files[0].path }}/bin/oozie-setup.sh -hadoop {{ hadoop_version }} /opt/mapr/hadoop/hadoop-{{ hadoop_version }}"
- name: Set owner mapr-system user
  file: path=/opt/mapr/oozie owner={{ mapr_user }} group={{ mapr_group }} state=directory recurse=yes

- name: Start all oozie instances
  lineinfile: dest={{ oozie_path_result.files[0].path }}/conf/warden.oozie.conf regexp="^services=" line="services=oozie:all:cldb"
- name: Copy to /opt/mapr/conf/conf.d/warden.oozie.conf
  copy: remote_src=true src={{ oozie_path_result.files[0].path }}/conf/warden.oozie.conf dest=/opt/mapr/conf/conf.d/warden.oozie.conf mode=0644 owner={{ mapr_user }} group={{ mapr_user }}

- name: Configure.sh -R
  shell: /opt/mapr/server/configure.sh -R
  when: oozie_result.changed
- name: Restart Oozie
  shell: maprcli node services -name oozie -action restart -nodes {{ ansible_fqdn }}
  register: task_result
  until: task_result.rc == 0
  retries: 10
  delay: 10
  ignore_errors: yes
  environment:
    MAPR_TICKETFILE_LOCATION: /opt/mapr/conf/mapruserticket
  when: oozie_result.changed